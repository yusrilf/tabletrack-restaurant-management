name: Deploy to cPanel

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: tabletrack_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, dom, fileinfo, mysql, gd, bcmath, zip, curl, xml, json, openssl, tokenizer
        coverage: none

    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"

    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Generate key
      run: php artisan key:generate

    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Create Database
      run: |
        mysql --version
        sudo systemctl start mysql
        mysql --host 127.0.0.1 --port 3306 -uroot -ppassword -e 'CREATE DATABASE IF NOT EXISTS tabletrack_test;'

    - name: Execute tests (Unit and Feature tests) via PHPUnit
      env:
        DB_CONNECTION: mysql
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_DATABASE: tabletrack_test
        DB_USERNAME: root
        DB_PASSWORD: password
      run: |
        php artisan migrate
        php artisan test

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, dom, fileinfo, mysql, gd, bcmath, zip, curl, xml, json, openssl, tokenizer

    - name: Install Dependencies
      run: composer install --optimize-autoloader --no-dev

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install NPM dependencies
      run: npm ci

    - name: Build assets
      run: npm run build

    - name: Create deployment archive
      run: |
        tar -czf tabletrack-deploy.tar.gz \
          --exclude='.git' \
          --exclude='.github' \
          --exclude='node_modules' \
          --exclude='tests' \
          --exclude='.env' \
          --exclude='storage/logs/*' \
          --exclude='storage/framework/cache/*' \
          --exclude='storage/framework/sessions/*' \
          --exclude='storage/framework/views/*' \
          .

    - name: Deploy to cPanel via FTP
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ${{ secrets.CPANEL_FTP_HOST }}
        username: ${{ secrets.CPANEL_FTP_USERNAME }}
        password: ${{ secrets.CPANEL_FTP_PASSWORD }}
        local-dir: ./
        server-dir: ${{ secrets.CPANEL_DEPLOY_PATH }}
        exclude: |
          **/.git*
          **/.git*/**
          **/node_modules/**
          **/tests/**
          **/.env
          **/storage/logs/*
          **/storage/framework/cache/*
          **/storage/framework/sessions/*
          **/storage/framework/views/*

    - name: Run post-deployment commands
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.CPANEL_SSH_HOST }}
        username: ${{ secrets.CPANEL_SSH_USERNAME }}
        password: ${{ secrets.CPANEL_SSH_PASSWORD }}
        port: ${{ secrets.CPANEL_SSH_PORT }}
        script: |
          cd ${{ secrets.CPANEL_DEPLOY_PATH }}
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache
          php artisan migrate --force
          php artisan storage:link
          chmod -R 755 storage
          chmod -R 755 bootstrap/cache